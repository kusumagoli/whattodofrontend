{"ast":null,"code":"import _classCallCheck from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/src/components/maprender/mapreder.js\";\nimport React, { Component } from 'react';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\nimport { myicon } from \"./icon\";\nimport pin2 from \"./../app/images/pin2.png\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nvar position = [17.440081, 78.348915];\n\nvar MapRender =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapRender, _Component);\n\n  function MapRender() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapRender);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapRender)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClick = function (e) {\n      _this.props.setMarker({\n        latitude: e.latlng.lat,\n        longitude: e.latlng.lng\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MapRender, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      {\n        navigator.geolocation.getCurrentPosition(function (location) {\n          console.log(\"my current latitude :\", location.coords.latitude);\n          console.log(\"my current longitude :\", location.coords.longitude);\n          sessionStorage.setItem(\"lat\", location.coords.latitude);\n          sessionStorage.setItem(\"long\", location.coords.longitude);\n          console.log(\"my current latitude :\", sessionStorage.getItem(\"lat\"));\n          console.log(\"my current longitude :\", sessionStorage.getItem(\"long\"));\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Map, {\n        ref: this.mapRef,\n        center: position,\n        zoom: 13,\n        style: {\n          height: '600px',\n          width: '1800px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        style: {\n          position: \"fixed\"\n        },\n        icon: myicon,\n        position: [parseFloat(sessionStorage.getItem(\"lat\")), parseFloat(sessionStorage.getItem(\"long\"))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Your location.\")), this.props.data.map(function (data) {\n        return React.createElement(Marker, {\n          position: [parseFloat(data.latitude), parseFloat(data.longitude)],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(Popup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, data.attr_Name), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), data.location));\n      }));\n    }\n  }]);\n\n  return MapRender;\n}(Component);\n\nexport default MapRender;","map":{"version":3,"sources":["/Users/meghana/Documents/dev/VVfrontend/leaflet-example/src/components/maprender/mapreder.js"],"names":["React","Component","Map","Marker","Popup","TileLayer","L","myicon","pin2","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","position","MapRender","handleClick","e","props","setMarker","latitude","latlng","lat","longitude","lng","navigator","geolocation","getCurrentPosition","location","console","log","coords","sessionStorage","setItem","getItem","mapRef","height","width","parseFloat","data","map","attr_Name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\nimport {myicon} from \"./icon\";\nimport pin2 from \"./../app/images/pin2.png\";\n\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst position = [17.440081, 78.348915];\nclass MapRender extends Component {\n\n  handleClick = (e) => {\n    this.props.setMarker({\n      latitude: e.latlng.lat,\n      longitude: e.latlng.lng \n    });\n  };\n\n  componentDidMount() {\n\n    {navigator.geolocation.getCurrentPosition(function(location) {\n      console.log(\"my current latitude :\",location.coords.latitude)\n      console.log(\"my current longitude :\",location.coords.longitude);\n     sessionStorage.setItem(\"lat\",location.coords.latitude)\n     sessionStorage.setItem(\"long\",location.coords.longitude)\n     console.log(\"my current latitude :\",sessionStorage.getItem(\"lat\"))\n      console.log(\"my current longitude :\",sessionStorage.getItem(\"long\"));\n\n    })}\n    \n  }\n\n  \n  render() {\n    return (\n      <Map\n        ref={this.mapRef}\n        center={position} \n        zoom={13} \n        style={{ height: '600px', width: '1800px' }}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n         \n        />\n\n      <Marker  style={{position:\"fixed\"}} icon={myicon} position={[parseFloat(sessionStorage.getItem(\"lat\")), parseFloat(sessionStorage.getItem(\"long\"))]}>\n                                 <Popup>Your location.</Popup>\n                                 </Marker>\n        {\n\n\n          this.props.data.map((data) => (\n            <Marker position={[parseFloat(data.latitude), parseFloat(data.longitude)]}>\n            <Popup>\n            \n              \n            <b>{data.attr_Name}</b>\n            <br/>\n            {data.location}\n            </Popup>\n            </Marker>\n          ))\n        }\n      </Map>\n    );\n  }\n}\n\nexport default MapRender;"]},"metadata":{},"sourceType":"module"}