{"ast":null,"code":"import _classCallCheck from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/src/components/app/home/homegrid.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport banglore from './../images/home_grid/bangloreland.jpg';\nimport charminar from './../images/home_grid/charminar.jpg';\nimport gof from './../images/home_grid/gateway_of_india.jpg';\nimport CardView from './../mapview/cardview';\nimport SelectInput from '@material-ui/core/Select/SelectInput';\nvar key;\n\nvar styles = function styles(theme) {\n  var _image;\n\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      minWidth: 300,\n      width: '100%'\n    },\n    image: (_image = {\n      position: 'relative',\n      height: 200\n    }, _defineProperty(_image, theme.breakpoints.down('xs'), {\n      width: '100% !important',\n      // Overrides inline-style\n      height: 100\n    }), _defineProperty(_image, '&:hover, &$focusVisible', {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15\n      },\n      '& $imageMarked': {\n        opacity: 0\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor'\n      }\n    }), _image),\n    focusVisible: {},\n    imageButton: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: theme.palette.common.white\n    },\n    imageSrc: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center 40%'\n    },\n    imageBackdrop: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      backgroundColor: theme.palette.common.black,\n      opacity: 0.4,\n      transition: theme.transitions.create('opacity')\n    },\n    imageTitle: {\n      position: 'relative',\n      padding: \"\".concat(theme.spacing.unit * 2, \"px \").concat(theme.spacing.unit * 4, \"px \").concat(theme.spacing.unit + 6, \"px\")\n    },\n    imageMarked: {\n      height: 3,\n      width: 18,\n      backgroundColor: theme.palette.common.white,\n      position: 'absolute',\n      bottom: -2,\n      left: 'calc(50% - 9px)',\n      transition: theme.transitions.create('opacity')\n    }\n  };\n};\n\nvar images = [{\n  url: banglore,\n  value: 'Banglore',\n  width: '25%'\n}, {\n  url: charminar,\n  value: 'Hyderabad',\n  width: '25%'\n}, {\n  url: gof,\n  value: 'Mumbai',\n  width: '25%'\n}];\nvar body;\n\nvar GridView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GridView, _React$Component);\n\n  function GridView(props) {\n    var _this;\n\n    _classCallCheck(this, GridView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GridView).call(this, props));\n    _this.state = {\n      city: \"\"\n    };\n    _this.handleCity = _this.handleCity.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GridView, [{\n    key: \"handleCity\",\n    value: function handleCity(event) {\n      var _this2 = this;\n\n      this.setState({\n        city: event.currentTarget.value\n      }, function () {\n        console.log(_this2.state.city);\n        var city = _this2.state.city;\n        console.log(city);\n        console.log(\"sending city\" + city);\n        var path = \"/cardview/\";\n\n        _this2.props.history.push({\n          pathname: path,\n          state: {\n            city: city,\n            flag: \"\"\n          }\n        });\n\n        console.log(\"sent city\" + _this2.state.city);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: \"1450px\",\n          height: \"200px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, images.map(function (image) {\n        return React.createElement(ButtonBase, {\n          onClick: _this3.handleCity,\n          focusRipple: true,\n          key: image.value,\n          value: image.value,\n          className: classes.image,\n          focusVisibleClassName: classes.focusVisible,\n          style: {\n            width: image.width\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: classes.imageSrc,\n          style: {\n            backgroundImage: \"url(\".concat(image.url, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: classes.imageBackdrop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: classes.imageButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          component: \"span\",\n          variant: \"subtitle1\",\n          color: \"inherit\",\n          className: classes.imageTitle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, image.value, React.createElement(\"span\", {\n          className: classes.imageMarked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }))));\n      })), React.createElement(\"div\", {\n        style: {\n          width: \"1300px\",\n          height: \"200px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"  \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), \"   Our website provides you with the most exquisite places to visit across the country, with elaboration like mesmerising pictures, crisp description and its location on the map.You can drop your comments , ratings and add pictures too..feel free to login with us to unveil more privileges and to have a whole new experience!!\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), \"Relax,You are with us!! We make it simple.\"))));\n    }\n  }]);\n\n  return GridView;\n}(React.Component);\n\nGridView.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(GridView);","map":{"version":3,"sources":["/Users/meghana/Documents/dev/VVfrontend/leaflet-example/src/components/app/home/homegrid.js"],"names":["React","PropTypes","withStyles","ButtonBase","Typography","banglore","charminar","gof","CardView","SelectInput","key","styles","theme","root","display","flexWrap","minWidth","width","image","position","height","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","padding","spacing","unit","imageMarked","images","url","value","body","GridView","props","state","city","handleCity","bind","event","setState","currentTarget","console","log","path","history","push","pathname","flag","classes","map","backgroundImage","fontSize","Component","propTypes","object","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,QAAP,MAAqB,wCAArB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,GAAP,MAAgB,4CAAhB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AAGA,IAAIC,GAAJ;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA;;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,QAAQ,EAAE,MAFN;AAGJC,MAAAA,QAAQ,EAAE,GAHN;AAIJC,MAAAA,KAAK,EAAE;AAJH,KADiB;AAOvBC,IAAAA,KAAK;AACHC,MAAAA,QAAQ,EAAE,UADP;AAEHC,MAAAA,MAAM,EAAE;AAFL,+BAGFR,KAAK,CAACS,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAHE,EAG6B;AAC9BL,MAAAA,KAAK,EAAE,iBADuB;AACJ;AAC1BG,MAAAA,MAAM,EAAE;AAFsB,KAH7B,2BAOH,yBAPG,EAOwB;AACzBG,MAAAA,MAAM,EAAE,CADiB;AAEzB,0BAAoB;AAClBC,QAAAA,OAAO,EAAE;AADS,OAFK;AAKzB,wBAAkB;AAChBA,QAAAA,OAAO,EAAE;AADO,OALO;AAQzB,uBAAiB;AACfC,QAAAA,MAAM,EAAE;AADO;AARQ,KAPxB,UAPkB;AA2BvBC,IAAAA,YAAY,EAAE,EA3BS;AA4BvBC,IAAAA,WAAW,EAAE;AACXR,MAAAA,QAAQ,EAAE,UADC;AAEXS,MAAAA,IAAI,EAAE,CAFK;AAGXC,MAAAA,KAAK,EAAE,CAHI;AAIXC,MAAAA,GAAG,EAAE,CAJM;AAKXC,MAAAA,MAAM,EAAE,CALG;AAMXjB,MAAAA,OAAO,EAAE,MANE;AAOXkB,MAAAA,UAAU,EAAE,QAPD;AAQXC,MAAAA,cAAc,EAAE,QARL;AASXC,MAAAA,KAAK,EAAEtB,KAAK,CAACuB,OAAN,CAAcC,MAAd,CAAqBC;AATjB,KA5BU;AAuCvBC,IAAAA,QAAQ,EAAE;AACRnB,MAAAA,QAAQ,EAAE,UADF;AAERS,MAAAA,IAAI,EAAE,CAFE;AAGRC,MAAAA,KAAK,EAAE,CAHC;AAIRC,MAAAA,GAAG,EAAE,CAJG;AAKRC,MAAAA,MAAM,EAAE,CALA;AAMRQ,MAAAA,cAAc,EAAE,OANR;AAORC,MAAAA,kBAAkB,EAAE;AAPZ,KAvCa;AAgDvBC,IAAAA,aAAa,EAAE;AACbtB,MAAAA,QAAQ,EAAE,UADG;AAEbS,MAAAA,IAAI,EAAE,CAFO;AAGbC,MAAAA,KAAK,EAAE,CAHM;AAIbC,MAAAA,GAAG,EAAE,CAJQ;AAKbC,MAAAA,MAAM,EAAE,CALK;AAMbW,MAAAA,eAAe,EAAE9B,KAAK,CAACuB,OAAN,CAAcC,MAAd,CAAqBO,KANzB;AAObnB,MAAAA,OAAO,EAAE,GAPI;AAQboB,MAAAA,UAAU,EAAEhC,KAAK,CAACiC,WAAN,CAAkBC,MAAlB,CAAyB,SAAzB;AARC,KAhDQ;AA0DvBC,IAAAA,UAAU,EAAE;AACV5B,MAAAA,QAAQ,EAAE,UADA;AAEV6B,MAAAA,OAAO,YAAKpC,KAAK,CAACqC,OAAN,CAAcC,IAAd,GAAqB,CAA1B,gBAAiCtC,KAAK,CAACqC,OAAN,CAAcC,IAAd,GAAqB,CAAtD,gBAA6DtC,KAAK,CAACqC,OAAN,CAAcC,IAAd,GAAqB,CAAlF;AAFG,KA1DW;AA8DvBC,IAAAA,WAAW,EAAE;AACX/B,MAAAA,MAAM,EAAE,CADG;AAEXH,MAAAA,KAAK,EAAE,EAFI;AAGXyB,MAAAA,eAAe,EAAE9B,KAAK,CAACuB,OAAN,CAAcC,MAAd,CAAqBC,KAH3B;AAIXlB,MAAAA,QAAQ,EAAE,UAJC;AAKXY,MAAAA,MAAM,EAAE,CAAC,CALE;AAMXH,MAAAA,IAAI,EAAE,iBANK;AAOXgB,MAAAA,UAAU,EAAEhC,KAAK,CAACiC,WAAN,CAAkBC,MAAlB,CAAyB,SAAzB;AAPD;AA9DU,GAAL;AAAA,CAApB;;AAyEA,IAAMM,MAAM,GAAG,CACb;AACEC,EAAAA,GAAG,EAAEhD,QADP;AAEEiD,EAAAA,KAAK,EAAE,UAFT;AAGErC,EAAAA,KAAK,EAAE;AAHT,CADa,EAMb;AACEoC,EAAAA,GAAG,EAAE/C,SADP;AAEEgD,EAAAA,KAAK,EAAE,WAFT;AAGErC,EAAAA,KAAK,EAAE;AAHT,CANa,EAWb;AACEoC,EAAAA,GAAG,EAAE9C,GADP;AAEE+C,EAAAA,KAAK,EAAE,QAFT;AAGErC,EAAAA,KAAK,EAAE;AAHT,CAXa,CAAf;AAiBA,IAAIsC,IAAJ;;IAEMC,Q;;;;;AAEJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AAEA,UAAKC,KAAL,GACA;AACEC,MAAAA,IAAI,EAAG;AADT,KADA;AAKA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AARiB;AASlB;;;;+BAGUC,K,EAAO;AAAA;;AAEhB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAACG,KAAK,CAACE,aAAN,CAAoBV;AAA1B,OAAd,EAAgD,YAAM;AACtDW,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACR,KAAL,CAAWC,IAAvB;AAEA,YAAIA,IAAI,GAAC,MAAI,CAACD,KAAL,CAAWC,IAApB;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAIAM,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAeP,IAA3B;AACA,YAAIQ,IAAI,eAAR;;AACA,QAAA,MAAI,CAACV,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,UAAAA,QAAQ,EAAEH,IADY;AAEtBT,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAEA,IADD;AAELY,YAAAA,IAAI,EAAG;AAFF;AAFe,SAAxB;;AAQDN,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAY,MAAI,CAACR,KAAL,CAAWC,IAAnC;AACI,OAnBH;AAqBD;;;6BAGQ;AAAA;;AAAA,UACCa,OADD,GACa,KAAKf,KADlB,CACCe,OADD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAI;AAACvD,UAAAA,KAAK,EAAG,QAAT;AAAmBG,UAAAA,MAAM,EAAC;AAA1B,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKgC,MAAM,CAACqB,GAAP,CAAW,UAAAvD,KAAK;AAAA,eACb,oBAAC,UAAD;AACI,UAAA,OAAO,EAAE,MAAI,CAAC0C,UADlB;AAEI,UAAA,WAAW,MAFf;AAGI,UAAA,GAAG,EAAE1C,KAAK,CAACoC,KAHf;AAII,UAAA,KAAK,EAAEpC,KAAK,CAACoC,KAJjB;AAKI,UAAA,SAAS,EAAEkB,OAAO,CAACtD,KALvB;AAOI,UAAA,qBAAqB,EAAEsD,OAAO,CAAC9C,YAPnC;AAQI,UAAA,KAAK,EAAE;AAACT,YAAAA,KAAK,EAAEC,KAAK,CAACD;AAAd,WARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAUI;AACI,UAAA,SAAS,EAAEuD,OAAO,CAAClC,QADvB;AAEI,UAAA,KAAK,EAAE;AAACoC,YAAAA,eAAe,gBAASxD,KAAK,CAACmC,GAAf;AAAhB,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVJ,EAcI;AAAM,UAAA,SAAS,EAAEmB,OAAO,CAAC/B,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdJ,EAeI;AAAM,UAAA,SAAS,EAAE+B,OAAO,CAAC7C,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AACI,UAAA,SAAS,EAAC,MADd;AAEI,UAAA,OAAO,EAAC,WAFZ;AAGI,UAAA,KAAK,EAAC,SAHV;AAII,UAAA,SAAS,EAAE6C,OAAO,CAACzB,UAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMK7B,KAAK,CAACoC,KANX,EAOI;AAAM,UAAA,SAAS,EAAEkB,OAAO,CAACrB,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,CADJ,CAfJ,CADa;AAAA,OAAhB,CADL,CADF,EAgCE;AAAK,QAAA,KAAK,EAAE;AAAClC,UAAAA,KAAK,EAAE,QAAR;AAAkBG,UAAAA,MAAM,EAAE;AAA1B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,KAAK,EAAI;AAACuD,UAAAA,QAAQ,EAAG;AAAZ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnC,4UAE8E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF9E,+CADJ,CAhCF,CAFJ,CADF;AA8CD;;;;EAzFoB3E,KAAK,CAAC4E,S;;AA4F7BpB,QAAQ,CAACqB,SAAT,GAAqB;AACZL,EAAAA,OAAO,EAAEvE,SAAS,CAAC6E,MAAV,CAAiBC;AADd,CAArB;AAKA,eAAe7E,UAAU,CAACS,MAAD,CAAV,CAAmB6C,QAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\n\nimport banglore from './../images/home_grid/bangloreland.jpg';\nimport charminar from './../images/home_grid/charminar.jpg';\nimport gof from './../images/home_grid/gateway_of_india.jpg';\nimport CardView from './../mapview/cardview';\nimport SelectInput from '@material-ui/core/Select/SelectInput';\n\n\nvar key;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: 300,\n    width: '100%',\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important', // Overrides inline-style\n      height: 100,\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15,\n      },\n      '& $imageMarked': {\n        opacity: 0,\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor',\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity'),\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 4}px ${theme.spacing.unit + 6}px`,\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity'),\n  },\n});\n\nconst images = [\n  {\n    url: banglore,\n    value: 'Banglore',\n    width: '25%',\n  },\n  {\n    url: charminar,\n    value: 'Hyderabad',\n    width: '25%',\n  },\n  {\n    url: gof,\n    value: 'Mumbai',\n    width: '25%',\n  },\n];\nvar body;\n\nclass GridView extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = \n    {\n      city : \"\",\n    }\n\n    this.handleCity = this.handleCity.bind(this);\n  }\n\n\n  handleCity(event) {\n\n    this.setState({city:event.currentTarget.value}, () => {\n    console.log(this.state.city)\n\n    let city=this.state.city\n    console.log(city);\n\n  \n\n    console.log(\"sending city\"+city)\n    let path= `/cardview/`;\n    this.props.history.push({\n      pathname: path,\n      state: {\n        city: city,\n        flag : \"\"\n      }\n   }) \n\n   console.log(\"sent city\"+this.state.city)\n      });\n    \n  }\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n         <br></br>\n          <center>\n            <div style = {{width : \"1450px\", height:\"200px\"}}> \n                {images.map(image => (\n                    <ButtonBase \n                        onClick={this.handleCity} \n                        focusRipple\n                        key={image.value}\n                        value={image.value}\n                        className={classes.image}\n                        \n                        focusVisibleClassName={classes.focusVisible}\n                        style={{width: image.width}}\n                    >\n                        <span\n                            className={classes.imageSrc}\n                            style={{backgroundImage: `url(${image.url})`}}\n                        />\n                        <span className={classes.imageBackdrop} />\n                        <span className={classes.imageButton}>\n                            <Typography\n                                component=\"span\"\n                                variant=\"subtitle1\"\n                                color=\"inherit\"\n                                className={classes.imageTitle}\n                            >\n                                {image.value}\n                                <span className={classes.imageMarked} />\n                            </Typography>\n                        </span>\n                    </ButtonBase>\n                ))}\n            </div>\n            <div style={{width: \"1300px\", height: \"200px\"}}>\n                <p style = {{fontSize : '20px'}}>  <br></br>   Our website provides you with the most exquisite places to visit across the\ncountry, with elaboration like mesmerising pictures, crisp description and its location on the map.You can drop your comments , ratings and add pictures\ntoo..feel free to login with us to unveil more privileges and to have a whole new experience!!<br></br>\nRelax,You are with us!! We make it simple.</p>\n            </div>\n</center>\n         \n      </div>\n\n    )\n  }\n}\n\nGridView.propTypes = {\n         classes: PropTypes.object.isRequired,\n         };\n      \n\nexport default withStyles(styles)(GridView);\n\n"]},"metadata":{},"sourceType":"module"}