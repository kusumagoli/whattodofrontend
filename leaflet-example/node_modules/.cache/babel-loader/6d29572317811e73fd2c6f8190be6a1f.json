{"ast":null,"code":"import _classCallCheck from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/src/components/maprender/mapreder.js\";\nimport React, { Component } from 'react';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\nimport './map.css';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nvar position = [17.440081, 78.348915];\n\nvar MapRender =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapRender, _Component);\n\n  function MapRender() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapRender);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapRender)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClick = function (e) {\n      _this.props.setMarker({\n        latitude: e.latlng.lat,\n        longitude: e.latlng.lng\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MapRender, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Map, {\n        ref: this.mapRef,\n        center: position,\n        zoom: 13,\n        style: {\n          height: '800px',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), this.props.markers.map(function (data) {\n        return React.createElement(Marker, {\n          position: [parseFloat(data.latitude), parseFloat(data.longitude)],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(Popup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"latitude:\", data.latitude, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), \"longitude:\", data.longitude, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), \" longitude:\", data.attr_Name));\n      }));\n    }\n  }]);\n\n  return MapRender;\n}(Component);\n\nexport default MapRender;","map":{"version":3,"sources":["/Users/meghana/Documents/dev/VVfrontend/leaflet-example/src/components/maprender/mapreder.js"],"names":["React","Component","Map","Marker","Popup","TileLayer","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","position","MapRender","handleClick","e","props","setMarker","latitude","latlng","lat","longitude","lng","mapRef","height","width","markers","map","data","parseFloat","attr_Name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,SAA7B,QAA8C,eAA9C;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,WAAP;AAEA,OAAOA,CAAC,CAACC,IAAF,CAAOC,OAAP,CAAeC,SAAf,CAAyBC,WAAhC;AAEAJ,CAAC,CAACC,IAAF,CAAOC,OAAP,CAAeG,YAAf,CAA4B;AACxBC,EAAAA,aAAa,EAAEC,OAAO,CAAC,wCAAD,CADE;AAExBC,EAAAA,OAAO,EAAED,OAAO,CAAC,qCAAD,CAFQ;AAGxBE,EAAAA,SAAS,EAAEF,OAAO,CAAC,uCAAD;AAHM,CAA5B;AAKA,IAAMG,QAAQ,GAAG,CAAC,SAAD,EAAY,SAAZ,CAAjB;;IACMC,S;;;;;;;;;;;;;;;;;;UAEJC,W,GAAc,UAACC,CAAD,EAAO;AACnB,YAAKC,KAAL,CAAWC,SAAX,CAAqB;AACnBC,QAAAA,QAAQ,EAAEH,CAAC,CAACI,MAAF,CAASC,GADA;AAEnBC,QAAAA,SAAS,EAAEN,CAAC,CAACI,MAAF,CAASG;AAFD,OAArB;AAID,K;;;;;;;6BAGQ;AACP,aACE,oBAAC,GAAD;AACE,QAAA,GAAG,EAAE,KAAKC,MADZ;AAEE,QAAA,MAAM,EAAEX,QAFV;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAE;AAAEY,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,SAAD;AACE,QAAA,GAAG,EAAC,oDADN;AAEE,QAAA,WAAW,EAAC,0EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAWI,KAAKT,KAAL,CAAWU,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,IAAD;AAAA,eACrB,oBAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE,CAACC,UAAU,CAACD,IAAI,CAACV,QAAN,CAAX,EAA4BW,UAAU,CAACD,IAAI,CAACP,SAAN,CAAtC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiBO,IAAI,CAACV,QAAtB,EAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/B,gBAAgDU,IAAI,CAACP,SAArD,OAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhE,iBAAiFO,IAAI,CAACE,SAAtF,CADF,CADqB;AAAA,OAAvB,CAXJ,CADF;AAoBD;;;;EA/BqBjC,S;;AAkCxB,eAAegB,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\nimport './map.css';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst position = [17.440081, 78.348915];\nclass MapRender extends Component {\n\n  handleClick = (e) => {\n    this.props.setMarker({\n      latitude: e.latlng.lat,\n      longitude: e.latlng.lng \n    });\n  };\n\n  \n  render() {\n    return (\n      <Map\n        ref={this.mapRef}\n        center={position} \n        zoom={13} \n        style={{ height: '800px', width: '100%' }}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n        {\n          this.props.markers.map((data) => (\n            <Marker position={[parseFloat(data.latitude), parseFloat(data.longitude)]}>\n              <Popup>latitude:{data.latitude}<br />longitude:{data.longitude} <br/> longitude:{data.attr_Name}</Popup>\n            </Marker>\n          ))\n        }\n      </Map>\n    );\n  }\n}\n\nexport default MapRender;"]},"metadata":{},"sourceType":"module"}