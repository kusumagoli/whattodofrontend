{"ast":null,"code":"import _classCallCheck from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/meghana/Documents/dev/VVfrontend/leaflet-example/src/components/map/index.js\";\nimport React, { Component } from 'react';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\nimport './map.css';\nimport 'leaflet/dist/leaflet.css';\nimport { Form, Button, FormControl } from 'react-bootstrap';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nvar position = [17.440081, 78.348915];\n\nvar LeafletMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LeafletMap, _Component);\n\n  function LeafletMap(props) {\n    var _this;\n\n    _classCallCheck(this, LeafletMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LeafletMap).call(this, props));\n\n    _this.handleLatChange = function (event) {\n      console.log(event.target.value);\n\n      _this.setState({\n        latiVal: event.target.value\n      });\n    };\n\n    _this.handleLongChange = function (event) {\n      console.log(event.target.value);\n\n      _this.setState({\n        longiVal: event.target.value\n      });\n    };\n\n    _this.handleClick = function (e) {\n      _this.props.setMarker({\n        latitude: e.latlng.lat,\n        longitude: e.latlng.lng\n      });\n\n      _this.setState({\n        lati: e.latlng.lat,\n        longi: e.latlng.lng\n      });\n\n      console.log(_this.state.lati);\n      console.log(_this.state.longi);\n    };\n\n    _this.handleLatChange = _this.handleLatChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLongChange = _this.handleLongChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      lati: \"\",\n      longi: \"\",\n      latiVal: \"\",\n      longiVal: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LeafletMap, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Form, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        readOnly: true,\n        type: \"text\",\n        placeholder: \"Lattitude\",\n        className: \"mr-sm-2\",\n        value: this.state.lati,\n        onChange: this.handleLatChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        readOnly: true,\n        type: \"text\",\n        placeholder: \"Longitude\",\n        className: \"mr-sm-2\",\n        value: this.state.longi,\n        onChange: this.handleLongChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Map, {\n        ref: this.mapRef,\n        center: position,\n        zoom: 13,\n        style: {\n          height: '500px',\n          width: '100%'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), this.props.markers.map(function (m) {\n        return React.createElement(Marker, {\n          position: [parseFloat(m.latitude), parseFloat(m.longitude)],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Popup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"latitude:\", m.latitude, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), \"longitude:\", m.longitude));\n      }))), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return LeafletMap;\n}(Component);\n\nexport default LeafletMap;","map":{"version":3,"sources":["/Users/meghana/Documents/dev/VVfrontend/leaflet-example/src/components/map/index.js"],"names":["React","Component","Map","Marker","Popup","TileLayer","L","Form","Button","FormControl","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","position","LeafletMap","props","handleLatChange","event","console","log","target","value","setState","latiVal","handleLongChange","longiVal","handleClick","e","setMarker","latitude","latlng","lat","longitude","lng","lati","longi","state","bind","mapRef","height","width","markers","map","m","parseFloat"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\nimport './map.css';\nimport  'leaflet/dist/leaflet.css';\nimport {Form,Button, FormControl} from 'react-bootstrap';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst position = [17.440081, 78.348915];\nclass LeafletMap extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLatChange = this.handleLatChange.bind(this);\n    this.handleLongChange = this.handleLongChange.bind(this);\n\n    this.state = {\n      lati:\"\",\n      longi:\"\",\n      latiVal:\"\",\n      longiVal:\"\",\n     \n    };\n  };\n\n  handleLatChange = event => {\n    console.log(event.target.value);\n    this.setState({\n      latiVal: event.target.value\n    });\n  }\n  handleLongChange = event => {\n    console.log(event.target.value);\n    this.setState({\n      longiVal: event.target.value\n    });\n  }\n   \n  \n  handleClick = (e) => {\n    this.props.setMarker({\n      latitude: e.latlng.lat,\n      longitude: e.latlng.lng \n    });\n    this.setState({\n    \n      lati:e.latlng.lat,\n      longi:e.latlng.lng,\n  \n    });\n    console.log(this.state.lati);\n    console.log(this.state.longi);\n  };\n\n  \n  render() {\n    return (\n      <div >\n         \n        \n        <Form className=\"form\" >\n          <div >\n          <Form inline>\n          <FormControl \n              readOnly\n            type=\"text\" \n            placeholder=\"Lattitude\" \n            className=\"mr-sm-2\"\n            value={this.state.lati} \n            onChange={this.handleLatChange}\n          />\n          \n          <FormControl \n          readOnly\n            type=\"text\" \n            placeholder=\"Longitude\" \n            className=\"mr-sm-2\"\n            value={this.state.longi}  \n            onChange={this.handleLongChange} \n          />\n      <Map\n        ref={this.mapRef}\n        center={position} \n        zoom={13} \n        style={{ height: '500px', width: '100%' }}\n        onClick={this.handleClick}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n        {\n          this.props.markers.map((m) => (\n            <Marker position={[parseFloat(m.latitude), parseFloat(m.longitude)]}>\n              <Popup>latitude:{m.latitude}<br />longitude:{m.longitude}</Popup>\n            </Marker>\n          ))\n        }\n      </Map>\n      </Form>        \n\n      <Button >Submit</Button>\n      </div>\n      </Form>\n\n\n      </div>\n    );\n  }\n}\n\nexport default LeafletMap;"]},"metadata":{},"sourceType":"module"}